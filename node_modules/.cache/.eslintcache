[{"D:\\TPO API\\api\\src\\index.js":"1","D:\\TPO API\\api\\src\\App.js":"2","D:\\TPO API\\api\\src\\reportWebVitals.js":"3","D:\\TPO API\\api\\src\\Login\\LoginForm.js":"4","D:\\TPO API\\api\\src\\HomeMenu\\Home.jsx":"5","D:\\TPO API\\api\\src\\HomeMenu\\NavBar.jsx":"6","D:\\TPO API\\api\\src\\Perfil\\perfil-site.jsx":"7","D:\\TPO API\\api\\src\\Historial\\Historial-site.jsx":"8","D:\\TPO API\\api\\src\\Perfil\\profile-content.jsx":"9","D:\\TPO API\\api\\src\\Historial\\historial.jsx":"10","D:\\TPO API\\api\\src\\Login\\recoverPw.jsx":"11","D:\\TPO API\\api\\src\\Login\\Registerform.jsx":"12"},{"size":535,"mtime":1694839411000,"results":"13","hashOfConfig":"14"},{"size":236,"mtime":1694839411000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1694839411000,"results":"16","hashOfConfig":"14"},{"size":1744,"mtime":1695243827726,"results":"17","hashOfConfig":"14"},{"size":8691,"mtime":1694991000102,"results":"18","hashOfConfig":"14"},{"size":2280,"mtime":1695243831263,"results":"19","hashOfConfig":"14"},{"size":326,"mtime":1694839411000,"results":"20","hashOfConfig":"14"},{"size":407,"mtime":1695241889029,"results":"21","hashOfConfig":"14"},{"size":3754,"mtime":1694839411000,"results":"22","hashOfConfig":"14"},{"size":4672,"mtime":1695243713659,"results":"23","hashOfConfig":"14"},{"size":1438,"mtime":1695003701579,"results":"24","hashOfConfig":"14"},{"size":5925,"mtime":1695004054826,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ss91l5",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\TPO API\\api\\src\\index.js",[],[],"D:\\TPO API\\api\\src\\App.js",["67"],[],"\nimport './App.css';\nimport './Login/login.css';\nimport Login from './Login/LoginForm';\nimport Home from './HomeMenu/Home';\n\n\nfunction App() {\n  return (\n\n    \n    /*<Login></Login>*/\n    <Home></Home>\n    \n\n  );\n}\n\nexport default App;\n","D:\\TPO API\\api\\src\\reportWebVitals.js",[],[],"D:\\TPO API\\api\\src\\Login\\LoginForm.js",["68","69","70","71"],[],"D:\\TPO API\\api\\src\\HomeMenu\\Home.jsx",["72"],[],"import React, { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport { deepOrange } from '@mui/material/colors';\nimport Slider from '@mui/material/Slider';\nimport Typography from '@mui/material/Typography';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './menu.css';\nimport NavigationBar from './NavBar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HistorialSite from '../Historial/Historial-site';\nimport Profilesite from '../Perfil/perfil-site';\nimport userLogin from '../Login/LoginForm';\n\nconst getAvatarColor = (name) => {\n  const firstLetter = name.charAt(0).toUpperCase();\n  return deepOrange[500];\n};\n\nconst generateRandomCalificacion = () => {\n  return Math.floor(Math.random() * 5) + 1; // Genera una calificación aleatoria de 1 a 5\n};\n\nconst generateRandomFrecuencia = () => {\n  const frecuencias = ['unica', 'semanal', 'mensual'];\n  const randomIndex = Math.floor(Math.random() * frecuencias.length);\n  return frecuencias[randomIndex];\n};\n\nconst generateRandomTipoClase = () => {\n  const tipos = ['individual', 'grupal'];\n  const randomIndex = Math.floor(Math.random() * tipos.length);\n  return tipos[randomIndex];\n};\n\nconst generateRandomCategoria = () => {\n  const categorias = ['Piano', 'Masticar', 'Manejo', 'Matematicas', 'Circo', 'Natación'];\n  const randomIndex = Math.floor(Math.random() * categorias.length);\n  return categorias[randomIndex];\n};\n\nconst generateRandomExperiencia = () => {\n  const experiencias = [\n    'Lorem ipsum dolor sit amet consectetur adipiscing elit.',\n    'Experiencia en la enseñanza de esta materia por más de 5 años.',\n    'Amplia experiencia en el campo y excelentes resultados con mis estudiantes.',\n    'Soy un experto en esta área y he ayudado a muchos estudiantes a tener éxito.',\n    'He trabajado con estudiantes de todas las edades y niveles de habilidad.',\n  ];\n  const randomIndex = Math.floor(Math.random() * experiencias.length);\n  return experiencias[randomIndex];\n};\n\nconst generateRandomPrecio = () => {\n  return Math.floor(Math.random() * 100) + 20; // Genera un precio aleatorio entre 20 y 120\n};\n\nconst generateRandomPosts = (count) => {\n  const posts = [];\n  for (let i = 1; i <= count; i++) {\n    const author = `Autor ${i}`;\n    const titulo = `Título ${i}`;\n    const experiencia = generateRandomExperiencia();\n    const categoria = generateRandomCategoria();\n    const precio = generateRandomPrecio();\n    const calificacion = generateRandomCalificacion();\n    const tipoClase = generateRandomTipoClase();\n    const frecuencia = generateRandomFrecuencia();\n\n    const post = {\n      author,\n      titulo,\n      experiencia,\n      categoria,\n      precio,\n      calificacion,\n      id: i,\n      tipoClase,\n      frecuencia,\n    };\n\n    posts.push(post);\n  }\n  return posts;\n};\n\nconst Postlist = ({ posts, filtroTipo, filtroFrecuencia, filtroCalificacion, filtroCategoria }) => {\n  const filteredPosts = posts.filter((post) => {\n    return (\n      (!filtroTipo || post.tipoClase === filtroTipo) &&\n      (!filtroFrecuencia || post.frecuencia === filtroFrecuencia) &&\n      (!filtroCalificacion || post.calificacion === filtroCalificacion) &&\n      (!filtroCategoria || post.categoria === filtroCategoria)\n    );\n  });\n\n  return (\n    <div className=\"post-container\">\n      <div className=\"post-grid\">\n        {filteredPosts.map((post) => (\n          <div className=\"post-preview\" key={post.id}>\n            <div className=\"head-post\">\n              <div className=\"class-category\">\n                <h2>{post.categoria}</h2>\n              </div>\n            </div>\n            <div className=\"avatar\">\n              <Stack direction=\"row\" spacing={2}>\n                <Avatar sx={{ bgcolor: getAvatarColor(post.author) }}>\n                  {post.author.charAt(0).toUpperCase()}\n                </Avatar>\n              </Stack>\n            </div>\n            <ul>\n              <li>Nombre: {post.author}</li>\n              <li>Titulo: {post.titulo}</li>\n              <li>Experiencia: {post.experiencia}</li>\n              <li>Calificacion: {post.calificacion}</li>\n            </ul>\n            <div className=\"precio-clase\">\n              <h1>{post.precio}/h</h1>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Sidebar = ({ setFiltroTipo, setFiltroFrecuencia, setFiltroCalificacion, setFiltroCategoria }) => {\n  const marks = [\n    { value: 1, label: '1' },\n    { value: 2, label: '2' },\n    { value: 3, label: '3' },\n    { value: 4, label: '4' },\n    { value: 5, label: '5' },\n  ];\n\n  return (\n    <div className=\"sidebar\">\n      <header>\n        <h3>Filtros</h3>\n      </header>\n\n      <div className=\"filter-container\">\n        <div className=\"filter\">\n          <InputLabel className=\"custom-label\">Tipo de clase</InputLabel>\n          <Select\n            className=\"custom-select\"\n            label=\"Tipo de clase\"\n            onChange={(e) => setFiltroTipo(e.target.value)}\n          >\n            <MenuItem value=\"\">Todos</MenuItem>\n            <MenuItem value=\"individual\">Individual</MenuItem>\n            <MenuItem value=\"grupal\">Grupal</MenuItem>\n          </Select>\n        </div>\n\n        <div className=\"filter\">\n          <InputLabel className=\"custom-label\">Frecuencia</InputLabel>\n          <Select\n            className=\"custom-select\"\n            label=\"Frecuencia\"\n            onChange={(e) => setFiltroFrecuencia(e.target.value)}\n          >\n            <MenuItem value=\"\">Todos</MenuItem>\n            <MenuItem value=\"unica\">Única</MenuItem>\n            <MenuItem value=\"semanal\">Semanal</MenuItem>\n            <MenuItem value=\"mensual\">Mensual</MenuItem>\n          </Select>\n        </div>\n\n        <div className=\"filter\">\n          <Typography id=\"calificacion-slider\" gutterBottom>\n            <strong style={{ textAlign: 'center', display: 'block' }}>Calificación</strong>\n          </Typography>\n          <Slider\n            defaultValue={3}\n            step={1}\n            min={1}\n            max={5}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"calificacion-slider\"\n            marks={marks}\n            labelPlacement=\"top\"\n            onChange={(e, value) => setFiltroCalificacion(value)}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <InputLabel className=\"custom-label\">Categoría</InputLabel>\n          <Select\n            className=\"custom-select\"\n            label=\"Categoría\"\n            onChange={(e) => setFiltroCategoria(e.target.value)}\n          >\n            <MenuItem value=\"\">Todos</MenuItem>\n            <MenuItem value=\"Piano\">Piano</MenuItem>\n            <MenuItem value=\"Masticar\">Masticar</MenuItem>\n            <MenuItem value=\"Manejo\">Manejo</MenuItem>\n            <MenuItem value=\"Matematicas\">Matematicas</MenuItem>\n            <MenuItem value=\"Circo\">Circo</MenuItem>\n            <MenuItem value=\"Natación\">Natación</MenuItem>\n          </Select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst HomeMenu = () => {\n  const [filtroTipo, setFiltroTipo] = useState('');\n  const [filtroFrecuencia, setFiltroFrecuencia] = useState('');\n  const [filtroCalificacion, setFiltroCalificacion] = useState(null);\n  const [filtroCategoria, setFiltroCategoria] = useState('');\n\n  // Generar 50 publicaciones aleatorias que cumplen con los filtros\n  const publicaciones = generateRandomPosts(50);\n\n  return (\n    <Router>\n      <NavigationBar />\n      <div className=\"mainMenu\">\n        <Switch>\n          <Route path=\"/historial\" component={HistorialSite} />\n          <Route path=\"/perfil\" component={Profilesite} />\n          <Route path=\"/iniciarsesion\" component={userLogin} />\n          <Route path=\"/\">\n            <div className=\"aside-container\">\n              <Sidebar\n                setFiltroTipo={setFiltroTipo}\n                setFiltroFrecuencia={setFiltroFrecuencia}\n                setFiltroCalificacion={setFiltroCalificacion}\n                setFiltroCategoria={setFiltroCategoria}\n              />\n            </div>\n            <div className=\"feed-container\"></div>\n            <div className=\"feed-post\">\n              <Postlist\n                posts={publicaciones}\n                filtroTipo={filtroTipo}\n                filtroFrecuencia={filtroFrecuencia}\n                filtroCalificacion={filtroCalificacion}\n                filtroCategoria={filtroCategoria}\n              />\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default HomeMenu;\n","D:\\TPO API\\api\\src\\HomeMenu\\NavBar.jsx",[],[],"D:\\TPO API\\api\\src\\Perfil\\perfil-site.jsx",["73","74"],[],"import React, { useState } from 'react';\nimport NavigationBar from '../HomeMenu/NavBar';\nimport ProfileInfo from './profile-content'\n\nconst userProfile = () => {\n    return ( \n\n        <div className=\"big-container-profile\">\n        \n            <ProfileInfo></ProfileInfo>\n\n        </div>\n\n\n);\n}\n \nexport default userProfile;","D:\\TPO API\\api\\src\\Historial\\Historial-site.jsx",["75","76"],[],"import React, { useState } from 'react';\nimport NavigationBar from '../HomeMenu/NavBar';\nimport HistorialSite from './historial';\nimport './historial-style.css';\n\n\nconst History_site = () => {\n    return ( \n\n    <div className=\"big-container\">\n      \n       <body>\n           <HistorialSite></HistorialSite>\n       </body>\n       </div>\n      \n  \n\n     );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default History_site;","D:\\TPO API\\api\\src\\Perfil\\profile-content.jsx",["77","78","79","80"],[],"import React, { useState } from 'react';\nimport NavigationBar from '../HomeMenu/NavBar';\nimport './profile-style.css'\nimport avatarImage from '../Img/avatar.png';\n\nconst Profilesite = () => {\n\n    const [perfil, setDatos] = useState([\n        { dcName: 'Gaston', dcApellido: 'Bortolin', calificacion: '4', ccreada: '04/8/2022', calificacion: '3', titulo: 'bueno bueno', id: 1 },\n    ]);\n\n    const [pub_commited, setPublicaciones] = useState([\n        { categoria: 'Piano', precio: '50', titulo: 'bueno bueno', despcripcion: 'Vamos hacer esto y lo otro' ,id: 1 },\n        { categoria: 'Guitarra', precio: '50', titulo: 'bueno bueno', despcripcion: 'Vamos hacer esto y lo otro' ,id: 2 },\n        { categoria: 'Cocina', precio: '50', titulo: 'bueno bueno', despcripcion: 'Vamos hacer esto y lo otro' ,id: 3 },\n        { categoria: 'Manejo', precio: '50', titulo: 'bueno bueno', despcripcion: 'Vamos hacer esto y lo otro' ,id: 4 },\n    ]);\n\n    return (\n        <div className=\"big-profile-container\">\n            <div className=\"inside-container\">\n                        <div className=\"info-container\">\n                            <div className=\"avatar-container\">\n                                <img src={avatarImage} alt=\"Avatar del docente\" />\n                            </div>\n                            <div className=\"datos-docente\">\n                            {perfil.map((dcPersona) => (\n                            <div key={dcPersona.id}>\n                                <h2>{dcPersona.dcName} {dcPersona.dcApellido}</h2>\n                                <p id='time-stamp'>Cuenta creada: {dcPersona.ccreada}</p>\n                                <p>Calificación: {dcPersona.calificacion}</p>\n                                <p>Título: {dcPersona.titulo}</p>\n                            </div>\n                            ))}\n                            </div>\n                        </div>\n                                \n                                {/* Mejorar el box de los datos del docente \n                                Agregar un box vacio gris con un signo más para agregar nuevas clases.\n                                Que popee un formulario con los datos a llenar */}\n\n\n                      <div className=\"publicaciones-container\">\n                        <div className=\"posteos-list\">\n                            {pub_commited.map((dcPost) => (\n                                <div className=\"post-preview\">\n                                    <div key={dcPost.id}>\n                                                                   \n                                        <h1 id='category'>{dcPost.categoria}</h1>\n                                        <p>Clases: {dcPost.cclases}</p>\n                                        <p>Calificación: {dcPost.calificacion}</p>\n                                        <p>Descripcion: {dcPost.despcripcion} </p>\n                                        \n                                        {/* Posibilidad de borrar, despublicar clase. Alguna animacion de tres puntitos que te de esas opciones */}\n                                        <p id='comments'>Comentarios: {dcPost.comentario}</p>\n                                        {/* Falta agregar el box de comentarios acumulados de los alumnos que contrataron el Servicio */}\n\n\n                                    </div>\n                                </div>\n                            ))}\n                            </div>\n                        </div>\n                \n                <div className=\"doc-courses\">\n                    {/* Aquí puedes agregar contenido relacionado con los cursos del docente */}\n                </div>\n            </div>\n        </div>\n    );\n}\n \nexport default Profilesite;\n","D:\\TPO API\\api\\src\\Historial\\historial.jsx",["81"],[],"D:\\TPO API\\api\\src\\Login\\recoverPw.jsx",[],[],"D:\\TPO API\\api\\src\\Login\\Registerform.jsx",["82"],[],{"ruleId":"83","severity":1,"message":"84","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":13},{"ruleId":"83","severity":1,"message":"87","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":14},{"ruleId":"83","severity":1,"message":"88","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":43,"column":11,"nodeType":"91","endLine":43,"endColumn":45},{"ruleId":"89","severity":1,"message":"90","line":44,"column":11,"nodeType":"91","endLine":44,"endColumn":44},{"ruleId":"83","severity":1,"message":"92","line":19,"column":9,"nodeType":"85","messageId":"86","endLine":19,"endColumn":20},{"ruleId":"83","severity":1,"message":"93","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"94","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":21},{"ruleId":"83","severity":1,"message":"93","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"94","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":21},{"ruleId":"83","severity":1,"message":"94","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":21},{"ruleId":"83","severity":1,"message":"95","line":8,"column":20,"nodeType":"85","messageId":"86","endLine":8,"endColumn":28},{"ruleId":"96","severity":1,"message":"97","line":9,"column":94,"nodeType":"98","messageId":"99","endLine":9,"endColumn":106},{"ruleId":"83","severity":1,"message":"100","line":12,"column":26,"nodeType":"85","messageId":"86","endLine":12,"endColumn":42},{"ruleId":"83","severity":1,"message":"101","line":55,"column":9,"nodeType":"85","messageId":"86","endLine":55,"endColumn":25},{"ruleId":"83","severity":1,"message":"93","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Modal' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firstLetter' is assigned a value but never used.","'useState' is defined but never used.","'NavigationBar' is defined but never used.","'setDatos' is assigned a value but never used.","no-dupe-keys","Duplicate key 'calificacion'.","ObjectExpression","unexpected","'setPublicaciones' is assigned a value but never used.","'handlePageChange' is assigned a value but never used."]